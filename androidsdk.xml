<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ *********************************************************************************************************************
  ~  <p/>
  ~  BACKENDLESS.COM CONFIDENTIAL
  ~  <p/>
  ~  ********************************************************************************************************************
  ~  <p/>
  ~  Copyright 2012 BACKENDLESS.COM. All Rights Reserved.
  ~  <p/>
  ~  NOTICE: All information contained herein is, and remains the property of Backendless.com and its suppliers,
  ~  if any. The intellectual and technical concepts contained herein are proprietary to Backendless.com and its
  ~  suppliers and may be covered by U.S. and Foreign Patents, patents in process, and are protected by trade secret
  ~  or copyright law. Dissemination of this information or reproduction of this material is strictly forbidden
  ~  unless prior written permission is obtained from Backendless.com.
  ~  <p/>
  ~  ********************************************************************************************************************
  -->

<project name="androidsdk" default="all">


    <property file="androidsdk.properties"/>

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/*.rbc/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.war"/>
        <include name="*.ear"/>
        <include name="*.apk"/>
        <include name="*.zip"/>
        <include name="*.swc"/>
        <include name="*.egg"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.ftl"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin.1.6" value="${JAVA_HOME}/bin"/>
    <path id="jdk.classpath.1.6">
        <fileset dir="${JAVA_HOME}">
            <include name="jre/lib/alt-rt.jar"/>
            <include name="jre/lib/alt-string.jar"/>
            <include name="jre/lib/charsets.jar"/>
            <include name="jre/lib/deploy.jar"/>
            <include name="jre/lib/javaws.jar"/>
            <include name="jre/lib/jce.jar"/>
            <include name="jre/lib/jsse.jar"/>
            <include name="jre/lib/management-agent.jar"/>
            <include name="jre/lib/plugin.jar"/>
            <include name="jre/lib/resources.jar"/>
            <include name="jre/lib/rt.jar"/>
            <include name="jre/lib/ext/dnsns.jar"/>
            <include name="jre/lib/ext/localedata.jar"/>
            <include name="jre/lib/ext/sunjce_provider.jar"/>
        </fileset>
    </path>

    <property name="project.jdk.home" value="${JAVA_HOME}"/>
    <property name="project.jdk.bin" value="${jdk.bin.1.6}"/>
    <property name="project.jdk.classpath" value="jdk.classpath.1.6"/>


    <!-- Project Libraries -->

    <path id="library.sdklibs.classpath">
        <fileset dir="${basedir}/libs">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>

    <path id="library.weborbclient.classpath">
        <pathelement location="${basedir}/libs/weborbclient.jar"/>
    </path>

    <path id="library.mediaLib.classpath">
        <pathelement location="${basedir}/libs/mediaLib.jar"/>
    </path>

    <path id="library.backendless.commons.classpath">
        <pathelement location="${basedir}/libs/commons-2.0.2.jar"/>
    </path>


    <!-- Application Server Libraries -->

    <!-- Modules -->


    <!-- Module backendless -->

    <dirname property="module.backendless.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.backendless" value="${JAVA_HOME}"/>
    <property name="module.jdk.bin.backendless" value="${jdk.bin.1.6}"/>
    <property name="module.jdk.classpath.backendless" value="jdk.classpath.1.6"/>

    <property name="compiler.args.backendless" value="${compiler.args}"/>

    <property name="backendless.output.dir" value="${module.backendless.basedir}/out/production/backendless"/>
    <property name="backendless.output.docs.dir" value="${module.backendless.basedir}/out/docs/backendless"/>
    <property name="backendless.output.test.dir" value="${module.backendless.basedir}/out/test/backendless"/>

    <path id="backendless.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="backendless.module.production.classpath">
        <path refid="${module.jdk.classpath.backendless}"/>
        <path refid="library.sdklibs.classpath"/>
    </path>

    <path id="backendless.runtime.production.module.classpath">
        <pathelement location="${backendless.output.dir}"/>
        <path refid="library.sdklibs.classpath"/>
        <path refid="library.weborbclient.classpath"/>
        <path refid="library.mediaLib.classpath"/>
        <path refid="library.backendless.commons.classpath"/>
    </path>

    <path id="backendless.module.classpath">
        <path refid="${module.jdk.classpath.backendless}"/>
        <pathelement location="${backendless.output.dir}"/>
        <path refid="library.sdklibs.classpath"/>
    </path>

    <path id="backendless.runtime.module.classpath">
        <pathelement location="${backendless.output.test.dir}"/>
        <pathelement location="${backendless.output.dir}"/>
        <path refid="library.sdklibs.classpath"/>
        <path refid="library.weborbclient.classpath"/>
        <path refid="library.mediaLib.classpath"/>
        <path refid="library.backendless.commons.classpath"/>
    </path>


    <patternset id="excluded.from.module.backendless">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.backendless">
        <patternset refid="excluded.from.module.backendless"/>
    </patternset>

    <path id="backendless.module.sourcepath">
        <dirset dir="${module.backendless.basedir}">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.backendless"
            depends="compile.module.backendless.production,compile.module.backendless.tests, compile.module.backendless.docs"
            description="Compile module backendless"/>

    <target name="compile.module.backendless.production" description="Compile module backendless; production classes">
        <mkdir dir="${backendless.output.dir}"/>
        <javac destdir="${backendless.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.backendless}/javac"
               source="1.6" target="1.6">
        <compilerarg line="${compiler.args.backendless}"/>
            <bootclasspath refid="backendless.module.bootclasspath"/>
            <classpath refid="backendless.module.production.classpath"/>
            <src refid="backendless.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.backendless"/>
        </javac>

        <copy todir="${backendless.output.dir}">
            <fileset dir="${module.backendless.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.backendless.tests" depends="compile.module.backendless.production"
            description="compile module backendless; test classes" unless="skip.tests"/>

    <target name="compile.module.backendless.docs" depends="compile.module.backendless.src"
            description="Building JavaDocs">
        <javadoc2 sourcepath="src" destdir="${backendless.output.docs.dir}" encoding="UTF-8"/>
        <jar basedir="${backendless.output.docs.dir}" destfile="${basedir}/out/backendless-javadoc.jar"/>
        <delete dir="${backendless.output.docs.dir}"/>
    </target>

    <target name="compile.module.backendless.src" description="Building Jar with source">
        <jar basedir="src" destfile="${basedir}/out/backendless-sources.jar"/>
    </target>

    <target name="clean.module.backendless" description="cleanup module">
        <delete dir="${backendless.output.dir}"/>
        <delete dir="${backendless.output.test.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.backendless" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.backendless" description="build all modules"/>

    <target name="init.artifacts">
        <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
        <property name="artifact.output.backendless:jar" value="${basedir}/out"/>
        <mkdir dir="${artifacts.temp.dir}"/>
        <property name="temp.jar.path.backendless.jar" value="${artifacts.temp.dir}/backendless.jar"/>
    </target>

    <target name="artifact.backendless:jar" depends="init.artifacts, compile.module.backendless"
            description="Build &#39;backendless:jar&#39; artifact">
        <property name="artifact.temp.output.backendless:jar" value="${artifacts.temp.dir}/backendless_jar"/>
        <mkdir dir="${artifact.temp.output.backendless:jar}"/>

        <unjar dest="${backendless.output.dir}" src="${basedir}/libs/commons-2.0.2.jar"/>

        <jar destfile="${temp.jar.path.backendless.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
            <zipfileset dir="${backendless.output.dir}"/>
            <zipfileset file="${basedir}/META-INF/MANIFEST.MF" prefix="META-INF"/>
            <zipfileset src="${basedir}/libs/weborbclient.jar"/>
            <zipfileset src="${basedir}/libs/mediaLib.jar"/>
        </jar>
        <copy file="${temp.jar.path.backendless.jar}" tofile="${artifact.temp.output.backendless:jar}/backendless.jar"/>
    </target>

    <target name="build.all.artifacts" depends="artifact.backendless:jar" description="Build all artifacts">
        <mkdir dir="${artifact.output.backendless:jar}"/>
        <copy todir="${artifact.output.backendless:jar}">
            <fileset dir="${artifact.temp.output.backendless:jar}"/>
        </copy>

        <!-- Delete temporary files -->
        <delete dir="${artifacts.temp.dir}"/>

        <ant antfile="postprocess.xml" target="copy_artifact" dir="${basedir}">
            <property name="artifact.output.path" value="${artifact.temp.output.backendless:jar}"/>
        </ant>
    </target>

    <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>