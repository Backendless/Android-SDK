apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    field.cattle.io/creatorId: user-9ngsb
  generation: 9
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-bl-redis-debug
  name: bl-redis-debug
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-bl-redis-debug
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2019-03-22T10:19:00Z"
        field.cattle.io/ports: '[[{"containerPort":6380,"dnsName":"bl-redis-debug-nodeport","kind":"NodePort","name":"6380tcp321001","protocol":"TCP","sourcePort":32100}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-bl-redis-debug
    spec:
      containers:
      - args:
        - redis-server
        - --appendonly
        - "yes"
        - --port
        - "6380"
        image: redis:4
        imagePullPolicy: IfNotPresent
        name: bl-redis-debug
        ports:
        - containerPort: 6380
          name: 6380tcp321001
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
