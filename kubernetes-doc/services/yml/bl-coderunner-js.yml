apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "73"
    field.cattle.io/creatorId: user-9ngsb
  generation: 91
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-bl-coderunner-js
  name: bl-coderunner-js
spec:
  progressDeadlineSeconds: 300
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-bl-coderunner-js
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-bl-coderunner-js
    spec:
      containers:
      - env:
        - name: BL_CONSUL_HOST
          valueFrom:
            configMapKeyRef:
              key: BL_CONSUL_HOST
              name: bl-env
              optional: false
        - name: BL_CONSUL_PORT
          valueFrom:
            configMapKeyRef:
              key: BL_CONSUL_PORT
              name: bl-env
              optional: false
        - name: BL_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: BL_MANAGEMENT_HTTP_PORT
          valueFrom:
            configMapKeyRef:
              key: BL_MANAGEMENT_HTTP_PORT
              name: bl-env
              optional: false
        - name: BL_JS_CODE_RUNNER_MODE
          valueFrom:
            configMapKeyRef:
              key: BL_JS_CODE_RUNNER_MODE
              name: bl-env
              optional: false
        image: backendless/bl-coderunner-js:     <--- provide version
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 2400
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: bl-coderunner-js
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /health
            port: 2400
            scheme: HTTP
          initialDelaySeconds: 2
          periodSeconds: 1
          successThreshold: 2
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /opt/backendless/repo
          name: repo
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /opt/backendless/shared/repo
          type: ""
        name: repo
